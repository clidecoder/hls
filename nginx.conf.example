# HSL Nginx Configuration Example
# Place in /etc/nginx/sites-available/hsl

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=webhook:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;

# Upstream backend
upstream hsl_backend {
    server 127.0.0.1:8000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

server {
    listen 80;
    server_name your-domain.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name your-domain.com;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Security Headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Webhook endpoint (GitHub traffic)
    location /webhook {
        # Rate limiting for webhooks
        limit_req zone=webhook burst=20 nodelay;
        
        # Important: Large payload support for GitHub webhooks
        client_max_body_size 10M;
        
        # Proxy configuration
        proxy_pass http://hsl_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Important: Long timeouts for Claude API processing
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Request buffering for large payloads
        proxy_buffering on;
        proxy_buffer_size 64k;
        proxy_buffers 8 64k;
        proxy_busy_buffers_size 128k;
        
        # Keep connections alive
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 1;
        proxy_next_upstream_timeout 0;
    }
    
    # API endpoints (health, stats)
    location ~ ^/(health|stats) {
        # More permissive rate limiting for monitoring
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://hsl_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Shorter timeouts for simple endpoints
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }
    
    # Deny all other paths
    location / {
        return 404;
    }
    
    # Logging
    access_log /var/log/nginx/hsl_access.log;
    error_log /var/log/nginx/hsl_error.log;
}